<?php
$this->headScript()
    ->appendFile($this->websiteUrl.'system/js/external/jquery/plugins/tmpl/jquery.tmpl.min.js')
    ->appendFile($this->websiteUrl . 'plugins/shopping/web/js/libs/require.min.js',
        null,
        array('data-main' => $this->websiteUrl . 'plugins/shopping/web/js/shipping.js')
    );

$this->headLink()
    ->appendStylesheet($this->websiteUrl . 'plugins/shopping/web/css/store.css');
?>
<div class="seotoaster container" xmlns="http://www.w3.org/1999/html">
    <?php
    echo $this->partial(
        'admin' . DIRECTORY_SEPARATOR . '_header.phtml',
        array(
            'headerText'  => $this->translate('Shipping configuration'),
            'helpSection' => $this->helpSection,
            'hashMap'     => Tools_Misc::$_helpHashMap
        )
    );
    ?>
<div class="content-footer">
    <form id="general-config" class="grid_12">
        <div class="grid_10 alpha omega">
            <label class="pointer" for="config-checkoutShippingTocRequire">
                <?php echo $this->formCheckbox('config[' . Shopping::SHIPPING_TOC_STATUS . ']', null, array('checked' => isset($this->shoppingConfig[Shopping::SHIPPING_TOC_STATUS]) ? $this->shoppingConfig[Shopping::SHIPPING_TOC_STATUS] : false)); ?>
                <?php echo $this->translate('Require Shipping TOC on checkout. Use label (HTML ok):'); ?>
            </label>
            <?php echo $this->formText(
                'config[' . Shopping::SHIPPING_TOC_LABEL . ']',
                isset($this->shoppingConfig[Shopping::SHIPPING_TOC_LABEL]) ? $this->shoppingConfig[Shopping::SHIPPING_TOC_LABEL] : null,
                array(
                    'placeholder' => $this->translate('left empty to use autogenerated label'),
                    'class'       => 'grid_4 alpha'
                )); ?>
            <?php echo $this->formText(
                'config[' . Shopping::SHIPPING_SUCCESS_MESSAGE . ']',
                isset($this->shoppingConfig[Shopping::SHIPPING_SUCCESS_MESSAGE]) ? $this->shoppingConfig[Shopping::SHIPPING_SUCCESS_MESSAGE] : null,
                array(
                    'placeholder' => $this->translate('Free shipping success message'),
                    'class'       => 'grid_4 alpha'
                )); ?>
            <?php echo $this->formText(
                'config[' . Shopping::SHIPPING_ERROR_MESSAGE . ']',
                isset($this->shoppingConfig[Shopping::SHIPPING_ERROR_MESSAGE]) ? $this->shoppingConfig[Shopping::SHIPPING_ERROR_MESSAGE] : null,
                array(
                    'placeholder' => $this->translate('Error message at the checkout page'),
                    'class'       => 'grid_4 alpha'
                )); ?>
        </div>
        <div class="grid_2 alpha omega mt0px">
            <label for="config-shippingTaxRate"><?php echo $this->translate('Shipping Tax Rate'); ?></label>
            <select name="<?php echo 'config['.Shopping::SHIPPING_TAX_RATE.']';?>">
                <option value="0" <?php echo (isset($this->shoppingConfig[Shopping::SHIPPING_TAX_RATE]) && $this->shoppingConfig[Shopping::SHIPPING_TAX_RATE] === '0') ? 'selected' : '';?>><?php echo $this->translate('Select');?></option>
                <option value="1" <?php echo (isset($this->shoppingConfig[Shopping::SHIPPING_TAX_RATE]) && $this->shoppingConfig[Shopping::SHIPPING_TAX_RATE] === '1') ? 'selected' : '';?>><?php echo $this->translate('Default Tax');?></option>
                <option value="2" <?php echo (isset($this->shoppingConfig[Shopping::SHIPPING_TAX_RATE]) && $this->shoppingConfig[Shopping::SHIPPING_TAX_RATE] === '2') ? 'selected' : '';?>><?php echo $this->translate('Tax Rate 1');?></option>
                <option value="3" <?php echo (isset($this->shoppingConfig[Shopping::SHIPPING_TAX_RATE]) && $this->shoppingConfig[Shopping::SHIPPING_TAX_RATE] === '3') ? 'selected' : '';?>><?php echo $this->translate('Tax Rate 2');?></option>
            </select>
        </div>
        <input type="hidden" name="<?php echo Tools_System_Tools::CSRF_SECURE_TOKEN;?>" value="<?php echo $this->secureToken;?>" />
    </form>
    <div id="shipping-config" class="grid_12 mt15px">
        <div id="shippers" class="ui-tabs-vertical clearfix">
            <ul class="grid_4 alpha omega list-bordered scroll m0px">
                <li><a href="#shippingzones" data-plugin="shippingzones"><?php echo $this->translate('General Shipping Zones Configuration'); ?></a></li>
                <li><a href="#markup" data-plugin="markup"><?php echo $this->translate('Markup'); ?></a></li>
                <li><a href="#pickup" data-plugin="pickup"><?php echo $this->translate('Pickup'); ?></a></li>
                <li><a href="#freeshipping" data-plugin="freeshipping"><?php echo $this->translate('Free shipping'); ?></a></li>
            <?php foreach($this->shippingPlugins as $plugin): ?>
                <li><a data-plugin="<?php echo $plugin->getName(); ?>" href="<?php echo $this->url( array(
                        'run' => 'config',
                        'name' => strtolower( $plugin->getName() )
                    ),
                        'pluginroute' ); ?>"><?php echo defined( $pluginName = ucfirst( $plugin->getName() ) . '::PLUGIN_ALIAS' ) ? constant( $pluginName ) : $plugin->getName(); ?></a>
                </li>
            <?php endforeach; ?>
                <li><a href="#orderconfig" data-plugin="orderconfig"><?php echo $this->translate('Minimum order'); ?></a></li>
                <li><a href="#trackingUrl" data-plugin="trackingUrl"><?php echo $this->translate("Carrier tracking url's"); ?></a></li>
            </ul>
            <div id="pane-container" class="grid_8 omega">
            <div id="shippingzones">
                <form class="grid_12" name="restrict-shipping-form" id="restrict-shipping-form" action="<?php echo $this->url(array('run' => 'bundledshipper'));?>" method="post" enctype="application/x-www-form-urlencoded">
                    <?php echo $this->shippingRestriction->getElement('shipper')->renderViewHelper(); ?>
                    <fieldset class="background">
                        <legend class="background large p5px"><?php echo $this->translate('General Shipping Zones Configuration');?></legend>
                    <div class="grid_12">
                        <label class="text-bold"><?php echo $this->translate('Out of the shipping zone | Error message');?>:</label>
                        <?php echo $this->shippingRestriction->getElement('restrictionMessage')->renderViewHelper(); ?>
                    </div>
                    <label class="grid_12 mt10px text-bold"><?php echo $this->translate('Restrict to buyers located in');?>:</label>
                    <?php echo $this->shippingRestriction->getElement('restrictDestination')->renderViewHelper(); ?>

                    <?php
                    $hidden = 'hidden';
                    if (!empty($this->shippingRestrictionConfig['config']['restrictDestination'])
                    && $this->shippingRestrictionConfig['config']['restrictDestination'] === Forms_Shipping_ShippingRestriction::DESTINATION_ZONE
                    ) {
                    $hidden = '';
                    }?>
                    <div class="<?php echo $hidden;?> grid_12" id="restricted-shipping-zones">
                        <label class="text-bold"><?php echo $this->translate('Restrict buyers by zone');?>:</label>
                        <?php echo $this->shippingRestriction->getElement('restrictZones')->renderViewHelper(); ?>
                    </div>
                    </fieldset>
                </form>
            </div>
            <div id="markup">
                <?php $this->markupForm->setAction($this->url(array('run' => 'bundledshipper'))); ?>
                <form action="<?php echo $this->markupForm->getAction(); ?>" method="post" enctype="application/x-www-form-urlencoded">
                    <?php echo $this->markupForm->getElement('shipper')->renderViewHelper(); ?>
                    <fieldset class="background">
                        <legend class="background large p5px"><?php echo $this->translate('Shipping markup configuration'); ?></legend>
                        <p class="labeled">
                            <?php echo $this->markupForm->getElement('modifierType')->setAttrib('class', 'grid_2 alpha fl-right')->renderViewHelper(); ?>
                            <?php echo $this->markupForm->getElement('price')->setAttrib('class', 'grid_4 fl-right')->renderViewHelper(); ?>
                            <?php echo $this->markupForm->getElement('modifierSign')->setAttrib('class', 'grid_2 omega fl-right')->renderViewHelper(); ?>
                            <label class="grid_4 omega" for="cartamount"><?php echo $this->markupForm->getElement('price')->getLabel(); ?></label>
                        </p>
                    </fieldset>
                 </form>
            </div>
            <div id="pickup">
                <?php $this->pickupForm->setAction($this->url(array('run' => 'bundledshipper'))); ?>
                <form class="pickup-config-form mt10px" name="pickup-config-form" action="<?php echo $this->pickupForm->getAction(); ?>" method="post" enctype="application/x-www-form-urlencoded">
                    <?php echo $this->pickupForm->getElement('shipper')->renderViewHelper(); ?>
                    <label>
                        <?php echo $this->pickupForm->getElement('defaultPickupConfig')->renderViewHelper(); ?>
                        <?php echo $this->translate('Default pickup behaviour');?>
                    </label>

                    <fieldset class="config-fields-pickup-config mt10px background hidden">
                        <legend class="background large p5px"><?php echo $this->translate('Shipping pickup configuration'); ?></legend>
                        <label>
                            <?php echo $this->pickupForm->getElement('searchEnabled')->renderViewHelper(); ?>
                            <?php echo $this->translate('Display location search on checkout');?>
                        </label>
                        <p class="grid_6 alpha labeled icon right">
                            <?php echo $this->pickupForm->getElement('title')->setAttrib('class', 'grid_8 alpha omega fl-right')->renderViewHelper();?>
                            <i class="tooltip info ticon-info-sign icon16" title="<?php echo $this->translate('custom title');?>"></i>
                            <?php echo $this->pickupForm->getElement('title')->addDecorator('Label', array('class' => 'grid_4 alpha omega'))->renderLabel();?>
                        </p>
                        <p class="grid_6 omega labeled">
                            <label class="grid_3 alpha omega fl-right"><span class="amount-limit-value-label"></span>/<span class="currency-value"><?php echo $this->shoppingConfig['currency'];?></span></label>
                            <?php echo $this->pickupForm->getElement('units')->setAttrib('class', 'grid_6 alpha omega fl-right')->renderViewHelper(); ?>
                            <?php echo $this->pickupForm->getElement('units')->addDecorator('Label', array('class' => 'grid_3 alpha omega'))->renderLabel(); ?>
                        </p>

                        <div class="grid_12 omega">
                            <label><?php echo $this->translate('Select location category');?></label>
                            <?php for($i = 1; $i < Shopping::QUANTITY_PICKUP_LOCATION_ON_SCREEN + 1; $i++):?>
                                <select data-pickup-category-select ="<?php echo $i;?>" class='pickup-location-category grid_2 alpha' name="pickup-location-category-<?php echo $i;?>">
                                    <?php $savedLocationCategory = isset($this->locationZonesInfo[$i-1])? $this->locationZonesInfo[$i-1]['pickup_location_category_id']: 0;?>
                                    <option value="0" <?php if($savedLocationCategory === 0) echo 'selected="selected"';?>><?php echo $this->translate('select');?></option>
                                    <?php if(isset($this->locationCategories) && !empty($this->locationCategories)):?>
                                        <?php foreach($this->locationCategories as $locationCategory):?>
                                            <option value="<?php echo $locationCategory->getId();?>" <?php echo ($savedLocationCategory == $locationCategory->getId() ?'selected="selected"':'');?>><?php echo $locationCategory->getName();?> </option>
                                        <?php endforeach;?>
                                    <?php endif;?>
                                </select>
                            <?php endfor;?>
                        </div>
                    </fieldset>
                    <div id="pickup-location-config-grid" class="mt10px scroll h150px hidden">
                        <?php if(isset($this->pickupLocationConf) && !empty($this->pickupLocationConf)):?>
                            <?php foreach($this->pickupLocationConf as $confRow):?>
                                <fieldset class="pickup-location-conf-row background mb10px" data-pickup-location-row="<?php echo $confRow['id'];?>">
                                    <p class="grid_7 ">
                                        <select name="amount-type-limit" class="amount-type-limit">
                                            <option value="<?php echo Shopping::AMOUNT_TYPE_UP_TO;?>" <?php echo (isset($confRow['amount_type_limit']) && $confRow['amount_type_limit'] === Shopping::AMOUNT_TYPE_UP_TO ?'selected="selected"':'');?>><?php echo $this->translate(Shopping::AMOUNT_TYPE_UP_TO);?></option>
                                            <option value="<?php echo Shopping::AMOUNT_TYPE_OVER;?>"  <?php echo (isset($confRow['amount_type_limit']) && $confRow['amount_type_limit'] === Shopping::AMOUNT_TYPE_OVER ?'selected="selected"':'');?>><?php echo $this->translate(Shopping::AMOUNT_TYPE_OVER);?></option>
                                            <option value="<?php echo Shopping::AMOUNT_TYPE_EACH_OVER;?>" <?php echo (isset($confRow['amount_type_limit']) && $confRow['amount_type_limit'] === Shopping::AMOUNT_TYPE_EACH_OVER ?'selected="selected"':'');?>><?php echo $this->translate('Each additional weight/currency unit over');?></option>
                                        </select>
                                    </p>
                                    <p class="grid_3 mt0px labeled">
                                        <input class="amount-limit-value grid_8 alpha omega" type="text" name="amount-limit-value"  value="<?php echo $confRow['amount_limit'];?>" />
                                        <label class="amount-limit-value-label grid_4 alpha omega"></label>
                                    </p>
                                    <button class="remove-pickup-location-zone link fl-right btn icon inverse-error ticon-close" title="<?php echo $this->translate('Remove');?>"></button>
                                    <div class="grid_12 omega">
                                        <?php for($i = 1; $i < Shopping::QUANTITY_PICKUP_LOCATION_ON_SCREEN + 1; $i++):?>
                                            <?php $amountValue = isset($this->pickupLocationConfigZones[$confRow['id'].'_'.$i])? $this->pickupLocationConfigZones[$confRow['id'].'_'.$i]['amount_location_category']: 0;?>
                                            <input class="grid_2 alpha amount-zone-value" type="text" data-amount-zone="<?php echo $i;?>" name="amount-zone-value" value="<?php echo $amountValue;?>" />
                                        <?php endfor;?>
                                    </div>
                                </fieldset>
                            <?php endforeach;?>
                        <?php endif;?>

                        <span class="add-pickup-config btn block success ticon-plus"><?php echo $this->translate('Add more pickup config');?></span>
                    </div>
                </form>
                <div class="grid_12 clear"></div>
            </div>
            <div id="freeshipping">
                <?php $this->freeForm->setAction($this->url(array('run' => 'bundledshipper'))); ?>
                <form class="clearfix" action="<?php echo $this->freeForm->getAction(); ?>" method="post" enctype="application/x-www-form-urlencoded">
                    <?php echo $this->freeForm->getElement('shipper')->renderViewHelper(); ?>
                    <fieldset class="background">
                        <legend class="background large p5px"><?php echo $this->translate('Free shipping'); ?></legend>
                        <p class="grid_6 alpha omega suffix_1 mt0px labeled">
                            <label class="unit-over grid_2 alpha omega fl-right"><?php echo $this->config['currency']; ?></label>
                            <?php echo $this->freeForm->getElement('cartamount')->setAttrib('class', 'grid_5 alpha omega fl-right')->renderViewHelper(); ?>
                            <label class="grid_5 alpha omega" for="cartamount"><?php echo $this->freeForm->getElement('cartamount')->getLabel(); ?></label>
                        </p>
                        <p class="grid_5 omega mt0px labeled">
                            <?php echo $this->freeForm->getElement('destination')->setAttrib('class', 'grid_7 alpha omega fl-right')->renderViewHelper(); ?>
                            <label class="grid_5 alpha omega"><?php echo $this->freeForm->getElement('destination')->getLabel(); ?></label>
                        </p>
                    </fieldset>
                </form>
            </div>
            <div id="orderconfig">
                <?php $this->orderConfigForm->setAction($this->url(array('run' => 'bundledshipper'))); ?>
                    <form action="<?php echo $this->orderConfigForm->getAction(); ?>" method="post" enctype="application/x-www-form-urlencoded">
                        <?php echo $this->orderConfigForm->getElement('shipper')->renderViewHelper(); ?>
                        <fieldset class="background">
                            <legend class="background large p5px"><?php echo $this->translate('Minimum order'); ?></legend>
                            <p class="labeled">
                                <?php echo $this->orderConfigForm->getElement('quantity')->setAttrib('class', 'grid_2 alpha fl-right')->renderViewHelper(); ?>
                                <label class="grid_4 omega" for="cartamount"><?php echo $this->orderConfigForm->getElement('quantity')->getLabel(); ?></label>
                            </p>
                        </fieldset>
                    </form>
            </div>
            <div id="trackingUrl">
                <div>
                    <fieldset class="background">
                        <legend class="background large p5px"><?php echo $this->translate("Carrier tracking url's"); ?></legend>
                        <div class="labeled" style="text-align: center; line-height: 30px;">
                            <button class="btn success grid_6 alpha fl-left ticon-plus" for="cartamount"><?php echo $this->translate($this->trackingUrlForm->getElement('addNew')->getLabel()); ?></button>
                            <span>OR</span>
                            <?php echo $this->trackingUrlForm->getElement('quantity')->setAttrib('class', 'grid_6 omega fl-right')->renderViewHelper(); ?>
                        </div>
                        <div class="add-new row-close" style="display: none;">
                            <span class="grid_4 omega" style="text-align: center"><?php echo $this->translate('Name');?>
                                <input type="text" id="name" name="name" />
                            </span>
                            <span class="grid_7 omega" style="text-align: center"><?php echo $this->translate('Service url');?>
                                <input type="text" id="url" name="url" />
                            </span>
                                <button style="margin-top: 20px;" class="grid_1 omega remove-pickup-location-shipping-url link fl-right btn icon inverse-error ticon-close" title="<?php echo $this->translate('Remove');?>"></button>
                        </div>
                        <div>
                            <button class="btn grid_4 omega fl-right save-data" style="margin-top: 10px;"/><?php echo $this->translate('Save');?></button>
                        </div>

                    </fieldset>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<div class="footer grid_12">
    <?php echo $this->formButton('submit', 'Save', array('class' => 'btn ticon-save', 'type' => 'submit')); ?>
</div>

<script>
$(function(){
    $(document).on("click", ".ticon-plus", function () {
        var selfdata = this,
            addnew = $(selfdata).closest('.background').find('.add-new'),
            selectValue = $('#shipping-url option:selected').val();
        if(selectValue != '0'){
            $("#shipping-url :contains('Select to edit')").attr("selected", true);
        }
        $('#name').val('');
        $('#url').val('');
        if(addnew.hasClass("row-open")){
            addnew.addClass("add-new-config");
            addnew.removeClass( "row-open").addClass( "row-close");
            $("#shipping-url :contains('Select to edit')").attr("selected", false);
            addnew.show();
        }else{
            if (addnew.hasClass("add-new-config")) {
                addnew.removeClass("add-new-config");
                addnew.hide();
            } else {
                addnew.addClass("add-new-config");
                addnew.show();
            }
        }
    });

    $(document).on("change", "#name", function () {
        var textValue = $('#name').val(),
            selectData = {
                name: textValue
            };

        $.ajax({
            url: '<?php echo $this->websiteUrl?>plugin/shopping/run/getData',
            dataType: 'json',
            data: JSON.stringify(selectData),
            type: 'POST'
        }).done(function (response) {
            $('#name').val(response.responseText.name);
            $('#url').val(response.responseText.url);
        });

    });

    $(document).on("change", "#shipping-url", function () {
        var selectValue = $('#shipping-url option:selected').val(),
            selfdata = this,
            addnew = $(selfdata).closest('.background').find('.add-new');

        if (addnew.hasClass("add-new-config") && selectValue == '0') {
            addnew.removeClass( "add-new-config" ).removeClass( "row-open").addClass( "row-close");
            addnew.hide();
        } else{
            var selectData = {
                name: selectValue
            };

            $.ajax({
                url: '<?php echo $this->websiteUrl?>plugin/shopping/run/getData',
                dataType: 'json',
                data: JSON.stringify(selectData),
                type: 'POST'
            }).done(function (response) {
                $('#name').val(response.responseText.name);
                $('#url').val(response.responseText.url);

                addnew.addClass( "add-new-config" );
                addnew.removeClass( "row-close" ).addClass("row-open");
                addnew.show();
            });
        }
    });

    $(document).on("click", ".save-data", function () {
      var name =  $('#name').val(),
          url = $('#url').val(),
          selfdata = this,
          addnew = $(selfdata).closest('.background').find('.add-new'),
          selectValue = $('#shipping-url option:selected').val();
        if(name == ''){
            showMessage('field not been empty');
        }else {
            var data = {
                name: name,
                url: url
            };
                $.ajax({
                    url: '<?php echo $this->websiteUrl?>plugin/shopping/run/setData',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    type: 'POST'
                }).done(function (response) {
                    var optVal = response.responseText.optionName,
                        optionValues = '';

                    $("#shipping-url option[value='"+optVal+"']").each(function() {
                        optionValues = optVal ;
                    });
                    if(optionValues == ''){
                        $("#shipping-url").append('<option value="'+optVal+'">'+optVal+'</option>');
                    }
                    showMessage(response.responseText.msg, false, 2000);
                });

            if(addnew.hasClass("add-new-config")){
                addnew.removeClass( "add-new-config" );
                addnew.hide();
            }
            if(selectValue !== '0'){
                $("#shipping-url :contains('Select to edit')").attr("selected", "selected");
            }
        }

    });

    $(document).on('click', '.remove-pickup-location-shipping-url', function(e){
        e.preventDefault();
          var selectName = $('#shipping-url option:selected').val(),
              selfdata = this,
              row = $(selfdata).closest('.background').find('.add-new');
        if(selectName === '0'){
            return;
        }
        showConfirm('<?php echo $this->translate('Are you sure want to delete?');?>', function() {
            row.removeClass( "add-new-config" );
            row.hide();
            $.ajax({
                url: $('#website_url').val()+'plugin/shopping/run/deleteData/selectName/'+selectName,
                type: 'DELETE',
                dataType: 'json'
            }).done(function(response) {
                var optionName = response.responseText.optionName;
                $("#shipping-url option[value="+optionName+"]").remove();
                $("#shipping-url :contains('Select to edit')").attr("selected", "selected");
                showMessage(response.responseText.msg, false, 2000);
            });
        });
    });

    $('form#general-config :input').on('change', function(){
        $.post($('#website_url').val()+'plugin/shopping/run/setConfig', $(this).closest('form').serialize());
    });

    $('#shippers').tabs({
        idPrefix      : 'shipper-tab',
        panelTemplate : '<div class="clearfix"></div>',
        beforeLoad    : function(event, ui){
            showSpinner('#pane-container');
        }
    });

    $('.restrict-destination').on('change', function(){
        if ($(this).val() === '<?php echo Forms_Shipping_ShippingRestriction::DESTINATION_ZONE;?>') {
            $('#restricted-shipping-zones').removeClass('hidden');
        } else {
            $('#restricted-shipping-zones').addClass('hidden');
        }
    });

    $('.footer #submit').on('click', function(e){
        showSpinner();
        var index = $('#shippers').tabs("option", "active"), currentPane = $('#pane-container div.ui-tabs-panel:eq('+index+')'),
            indexOfPluginTab = index + 1;

        if($('#ui-id-'+indexOfPluginTab+'').data('plugin') === '<?php echo Shopping::SHIPPING_PICKUP;?>'){
            e.preventDefault();

            var configRows = $('.pickup-location-conf-row'),
                configData = [],
                configRowId = 0,
                amountZoneObject = [],
                zoneSelectId = 0,
                zoneId = 0,
                zoneAmount = 0,
                amountTypeLimit = '',
                overRestriction = 0,
                defaultPickupConfig = 0,
                searchEnabled = 0;

            $.each(configRows, function(){
                configRowId = $(this).data('pickup-location-row');
                amountZoneObject = $(this).find('.amount-zone-value');
                var zoneWithAmount = [];
                $.each(amountZoneObject, function(){
                    zoneSelectId = $(this).data('amount-zone');
                    zoneId = $('select[name="pickup-location-category-'+zoneSelectId+'"] option:selected').val();
                    zoneAmount = $(this).val();
                    zoneWithAmount[zoneSelectId] = {zoneAmount:zoneAmount, zoneId:zoneId};

                });
                amountTypeLimit = $(this).find('.amount-type-limit option:selected').val();
                if(amountTypeLimit === '<?php echo Shopping::AMOUNT_TYPE_OVER;?>' || amountTypeLimit === '<?php echo Shopping::AMOUNT_TYPE_EACH_OVER;?>'){
                    overRestriction += 1;
                }
                configData.push({configRowId:configRowId, amountType:$(this).find('.amount-type-limit option:selected').val(),
                    amountLimit:$(this).find('.amount-limit-value').val(), zoneWithAmount:zoneWithAmount});
            });
            if(overRestriction > 1){
                showMessage('<?php echo $this->translate('You can setup only one over option')?>', true);
                hideSpinner();
                return false;

            }

            if($('#defaultPickupConfig').is(':checked')){
                defaultPickupConfig = 1;
            }

            if($('#searchEnabled').is(':checked')){
                searchEnabled = 1;
            }

            $.ajax({
                type: "POST",
                url: $('.pickup-config-form').attr('action'),
                dataType: "json",
                data: {
                    configData:configData,
                    title:$('#title').val(),
                    units:$('#units option:selected').val(),
                    shipper:'<?php echo Shopping::SHIPPING_PICKUP;?>',
                    defaultPickupConfig:defaultPickupConfig,
                    searchEnabled:searchEnabled
                }
            }).done(function(response) {
                if(response.done){
                    $('#shippers').tabs('load', index);
                        showMessage('<?php echo $this->translate('Saved')?>', false);
                }

            });
            return false;
        }else if(currentPane){
            var form = currentPane.find('form');
            $.ajax({
                url      : form.attr('action'),
                data     : form.serialize(),
                dataType : 'json',
                type     : form.attr('method'),
                complete : function(response){
                    form.trigger('formsave', response);
                    hideSpinner();
                }
            });
        }
    });

    $('.pickup-config-form').on('change', '#units', function(e){
        switch ($(this).val()){
            case 'amount':
                $('.amount-limit-value-label').text('<?php echo $this->shoppingConfig['currency'];?>');
                break;
            case 'weight':
                $('.amount-limit-value-label').text('<?php echo $this->shoppingConfig['weightUnit'];?>');
                break;
        }
    });

    $('.pickup-config-form').on('click', '.remove-pickup-location-zone', function(e){
        e.preventDefault();
        var locationRow = $(this).closest('.pickup-location-conf-row'),
            locationId = locationRow.data('pickup-location-row');

        showConfirm('<?php echo $this->translate('Are you sure want to delete?');?>', function() {
            $.ajax({
               url: $('#website_url').val()+'plugin/shopping/run/deletePickupLocation/locationId/'+locationId,
               type: 'DELETE',
               dataType: 'json'
            }).done(function(response) {
                if ($('.pickup-config-form').find('.pickup-location-conf-row').length > 1) {
                    locationRow.remove();
                } else{
                    locationRow.find('input').val(0);
                }
            });
        });
    });

    var previousCategory = '';

    $('.pickup-location-category').on('focus', function(){
        previousCategory = this.value;
    }).change(function() {
            var selectId = $(this).data('pickup-category-select'),
                selectedCategory = $(this).find('option:selected').val(),
                selectElements = $('.pickup-location-category:not([data-pickup-category-select="'+selectId+'"])');

            selectElements.find('option[value="'+selectedCategory+'"]').prop('disabled', true);
            selectElements.find('option[value="0"]').prop('disabled', false);
            selectElements.find('option[value="'+previousCategory+'"]').prop('disabled', false);
    });

    $('.add-pickup-config').on('click', function(e){
        var lastPickupLocationRateRow     = $('.pickup-location-conf-row').last(),
            numberOfRow         = lastPickupLocationRateRow.data('pickup-location-row'),
            rowDiv = '<fieldset class="pickup-location-conf-row background mb10px" data-pickup-location-row="'+(numberOfRow+1)+'">'+lastPickupLocationRateRow.html()+'</fieldset>';
        lastPickupLocationRateRow.after(rowDiv);
        $('.pickup-location-conf-row').last().find('input[type=text]').val(0);
    });


    $('#defaultPickupConfig').on('change', function(){
        $('.config-fields-pickup-config').toggleClass('hidden');
        $('#pickup-location-config-grid').toggleClass('hidden');
    });
    <?php if(!$this->defaultPickup):?>
        $('.config-fields-pickup-config').toggleClass('hidden');
        $('#pickup-location-config-grid').toggleClass('hidden');
    <?php endif ;?>
    $('#units').trigger('change');
});
</script>