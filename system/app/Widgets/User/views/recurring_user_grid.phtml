<?php
    $this->headScript()->appendFile($this->websiteUrl.'plugins/shopping/web/js/libs/moment.min.js');
?>

<div id="user-recurring-grid">
    <input type="hidden" class="secureToken" name="secureToken"
           value="<?php echo Tools_System_Tools::initSecureToken(Shopping::SHOPPING_SECURE_TOKEN); ?>"/>
    <table id="user-recurring-orders-table" border="1" class="widget">
        <thead>
        <tr class="user-orders-title-table">
            <th><?php echo $this->translate('Order date'); ?></th>
            <th><?php echo $this->translate('Your autoship invoices'); ?></th>
            <?php if (!$this->withoutPeriodCycle): ?>
                <th><?php echo $this->translate('Payment period cycle'); ?></th>
            <?php endif; ?>
            <th><?php echo $this->translate('Recurring Payment amount'); ?></th>
            <th><?php echo $this->translate('Last billing date'); ?></th>
            <th><?php echo $this->translate('Next billing date'); ?></th>
            <th><?php echo $this->translate('Shipping address'); ?></th>
            <th class="user-recurring-status-th"><?php echo $this->translate('Status'); ?></th>
        </tr>
        </thead>
        <tbody>
        <?php if (!empty($this->orders)): ?>
            <?php $countries = Tools_Geo::getCountries(true); ?>
            <?php $states = Tools_Geo::getState(null, true); ?>
            <?php foreach ($this->orders as $order): ?>
                <tr data-role="cart" data-id="<?php echo $order['cart_id']; ?>">
                    <td><?php echo date("d-M-Y", strtotime($order['created_at'])); ?></td>
                    <td>
                        <?php $dependentOrders = explode(',', $order['dependentOrders']); ?>
                        <?php foreach ($dependentOrders as $dependentOrderId): ?>
                            <a href="javascript:;" class="tpopup" data-pheight="560"
                               data-url="<?php echo $this->websiteUrl; ?>plugin/shopping/run/order/id/<?php echo $dependentOrderId; ?>">
                                # <?php echo $dependentOrderId; ?></a>
                        <?php endforeach; ?>
                    </td>
                    <?php if (!$this->withoutPeriodCycle): ?>
                        <td class="user-order-current-status">
                            <?php $changePaymentPeriod = trim(strtolower($order['payment_period'])); ?>
                            <?php if ($changePaymentPeriod === '+3 month') : ?>
                                <?php $changePaymentPeriod = 'quarter'; ?>
                            <?php elseif ($changePaymentPeriod === '+6 month'): ?>
                                <?php $changePaymentPeriod = 'semester'; ?>
                            <?php elseif ($changePaymentPeriod === '+1 month'): ?>
                                <?php $changePaymentPeriod = 'month'; ?>
                            <?php elseif ($changePaymentPeriod === '+1 year'): ?>
                                <?php $changePaymentPeriod = 'year'; ?>
                            <?php elseif ($changePaymentPeriod === '+1 week'): ?>
                                <?php $changePaymentPeriod = 'week'; ?>
                            <?php elseif ($changePaymentPeriod === '+2 month'): ?>
                                <?php $changePaymentPeriod = 'month-two'; ?>
                            <?php endif; ?>

                            <?php $changePaymentPeriodCustom = strtolower(preg_replace('/[^a-zA-Z]/ui', '', $order['payment_period']));?>
                            <?php $changePaymentPeriodQuantity =  preg_replace('/[\D]/ui', '', $order['payment_period']);?>
                            <?php $customRange = false;?>

                            <?php if ($changePaymentPeriodCustom === 'month' || $changePaymentPeriodCustom === 'day'): ?>
                                <?php if ($changePaymentPeriodCustom === 'month'): ?>
                                    <?php if (!in_array($changePaymentPeriodQuantity, array('1', '2', '3', '6'))): ?>
                                        <?php $customRange = true; ?>
                                    <?php endif; ?>
                                <?php else: ?>
                                    <?php if (!in_array($changePaymentPeriodQuantity, array('1'))): ?>
                                        <?php $customRange = true; ?>
                                    <?php endif; ?>
                                <?php endif; ?>
                            <?php endif; ?>

                            <?php if (array_key_exists('recurring-payment-' . $changePaymentPeriod, $this->activeRecurringPaymentTypes) && $customRange === false && $this->disablePeriodOptions === false): ?>
                                <select class="change-recurring-payment-period" name="change-recurring-payment-period">
                                    <?php foreach (Api_Store_Recurringtypes::$recurringAcceptType as $recurringType => $recurringTypeFullName): ?>
                                        <?php if (array_key_exists(strtolower('recurring-payment-' . $recurringType),
                                            $this->activeRecurringPaymentTypes)): ?>
                                            <?php $recurringTypeLabel = $recurringType;?>
                                            <?php if ($recurringTypeLabel === 'month-two'):?>
                                                <?php $recurringTypeLabel = 'two month';?>
                                            <?php endif;?>
                                            <option value="<?php echo strtoupper($recurringType); ?>" <?php echo ($changePaymentPeriod === $recurringType) ? 'selected' : ''; ?>> <?php echo $this->translate('Every') . ' ' . $this->translate($recurringTypeLabel); ?></option>
                                        <?php endif; ?>
                                    <?php endforeach; ?>
                                </select>
                            <?php else: ?>
                                <?php echo $this->translate('Every') . ' ' . $changePaymentPeriodQuantity .' '. $this->translate($changePaymentPeriodCustom).'(s)'; ?>
                            <?php endif; ?>
                        </td>
                    <?php endif; ?>
                    <td><?php echo $this->currency(floatval($order['payment_cycle_amount'])); ?></td>
                    <td class="user-order-current-status"><?php echo ($order['last_payment_date'] === '0000-00-00') ? '' : date("d-M-Y",
                            strtotime($order['last_payment_date'])); ?></td>
                    <td class="user-order-next-billing-date">
                        <?php if ($order['accept_changing_next_billing_date'] && $order['recurring_status'] === Store_Model_RecurringPayments::ACTIVE_RECURRING_PAYMENT): ?>
                            <?php if ($this->disablePeriodOptions === false):?>
                                <input type="text" class="user-order-next-billing-date-change"
                                       name="user-order-next-billing-date-change" value="<?php echo date("d-M-Y", strtotime($order['next_payment_date'])); ?>"/>
                            <?php else:?>
                                <?php echo  date("d-M-Y", strtotime($order['next_payment_date'])); ?>
                            <?php endif;?>
                        <?php else: ?>
                            <?php echo  date("d-M-Y", strtotime($order['next_payment_date'])); ?>
                        <?php endif; ?>
                    </td>
                    <td>
                        <?php if (array_key_exists($order['shipping_address_id'], $this->addresses)): ?>
                            <?php $shippingAddress = $this->addresses[$order['shipping_address_id']]; ?>
                            <?php if (empty($order['accept_changing_shipping_address'])): ?>
                                <p>
                                    <span><?php echo $shippingAddress['firstname'] . ' ' . $shippingAddress['lastname']; ?></span>
                                    <span
                                        class="recurring-shipping-street-address"><?php echo $shippingAddress['address1'] . ' ' . $shippingAddress['address2']; ?></span>
                                </p>
                            <?php else: ?>
                                <input class="recurring-shipping-firstname" type="text"
                                       name="recurring-shipping-firstname"
                                       value="<?php echo $shippingAddress['firstname']; ?>"/>
                                <input class="recurring-shipping-lastname" type="text"
                                       name="recurring-shipping-lastname"
                                       value="<?php echo $shippingAddress['lastname']; ?>"/>
                                <input class="recurring-shipping-address1" type="text"
                                       name="recurring-shipping-address1"
                                       value="<?php echo $shippingAddress['address1']; ?>"/>
                                <input class="recurring-shipping-address2" type="text"
                                       name="recurring-shipping-address2"
                                       value="<?php echo $shippingAddress['address2']; ?>"/>
                            <?php endif; ?>
                            <p>
                            <span
                                class="recurring-shipping-locality"><?php echo $shippingAddress['city'] . ($shippingAddress['city'] && ($shippingAddress['state'] || $shippingAddress['zip']) ? ',' : ''); ?></span>
                            <span
                                class="recurring-shipping-region"><?php echo isset($states[$shippingAddress['state']]) ? $states[$shippingAddress['state']] : ''; ?></span>
                                <?php if (!empty($order['accept_changing_shipping_address'])): ?>
                                    <input class="recurring-shipping-zip" type="text"
                                           name="recurring-shipping-zip"
                                           value="<?php echo $shippingAddress['zip']; ?>"/>
                                <?php else: ?>
                                    <span
                                        class="recurring-shipping-postal-code"><?php echo $shippingAddress['zip']; ?></span>
                                <?php endif; ?>
                                <span><?php echo $countries[$shippingAddress['country']]; ?></span>
                            </p>
                            <?php if (!empty($order['accept_changing_shipping_address'])): ?>
                                <input type="button" class="recurring-shipping-update" name="recurring-shipping-update"
                                       value="<?php echo $this->translate('Update shipping address'); ?>">
                            <?php endif; ?>
                        <?php endif; ?>
                    </td>
                    <td class="user-order-current-status">
                        <select class="change-recurring-status" name="change-recurring-status">
                            <option
                                value="<?php echo Store_Model_RecurringPayments::ACTIVE_RECURRING_PAYMENT; ?>" <?php echo ($order['recurring_status'] === Store_Model_RecurringPayments::ACTIVE_RECURRING_PAYMENT) ? 'selected' : ''; ?>><?php echo $this->translate(Store_Model_RecurringPayments::ACTIVE_RECURRING_PAYMENT); ?></option>
                            <option
                                value="<?php echo Store_Model_RecurringPayments::SUSPENDED_RECURRING_PAYMENT; ?>" <?php echo ($order['recurring_status'] === Store_Model_RecurringPayments::SUSPENDED_RECURRING_PAYMENT) ? 'selected' : ''; ?>><?php echo $this->translate(Store_Model_RecurringPayments::SUSPENDED_RECURRING_PAYMENT); ?></option>
                            <option
                                value="<?php echo Store_Model_RecurringPayments::CANCELED_RECURRING_PAYMENT; ?>" <?php echo ($order['recurring_status'] === Store_Model_RecurringPayments::CANCELED_RECURRING_PAYMENT) ? 'selected' : ''; ?>><?php echo $this->translate(Store_Model_RecurringPayments::CANCELED_RECURRING_PAYMENT); ?></option>
                        </select>
                    </td>

                </tr>
            <?php endforeach; ?>
        <?php endif; ?>
        </tbody>
    </table>
</div>
<script type="text/javascript">
    $(function () {
        $('.change-recurring-status').on('focus', function () {
            previousRecurringValue = $(this).val();
        }).on('change', function () {
            var currentRecurringStatus = $(this).val(),
                cartId = $(this).closest('tr').data('id'),
                secureToken = $('.secureToken').val(),
                self = $(this);
            $.post('<?php echo $this->websiteUrl;?>' + 'plugin/shopping/run/updateSubscription/', {
                'changeSubscription': currentRecurringStatus,
                'cartId': cartId,
                'secureToken': secureToken
            }, function (response) {
                if (response.error) {
                    self.val(previousRecurringValue);
                    showMessage(response.responseText, true);
                } else {
                    showMessage(response.responseText);
                }
            }, 'json');
        });


        $('.change-recurring-payment-period').on('focus', function () {
            previousPaymentPeriodValue = $(this).val();
        }).on('change', function (e) {
            var cartId = $(this).closest('tr').data('id'),
                secureToken = $('.secureToken').val(),
                paymentCycle = $(this).val(),
                self = $(this),
                el = $(e.currentTarget);
            $.post('<?php echo $this->websiteUrl;?>' + 'plugin/shopping/run/updateRecurringData/', {
                'cartId': cartId,
                'secureToken': secureToken,
                'changeType': 'payment_cycle',
                'paymentCycle': paymentCycle
            }, function (response) {
                var today = '<?php echo date('Y-m-d', strtotime('now'))?>';
                if (response.error) {
                    self.val(previousPaymentPeriodValue);
                    showMessage(response.responseText, true);
                } else {
                    var date = moment(today);
                    var recurringStatusEl =  el.closest('tr').find('.change-recurring-status');
                    var nextBillingDateEl = el.closest('tr').find('.user-order-next-billing-date-change');
                    if(!nextBillingDateEl.length) {
                        nextBillingDateEl = el.closest('tr').find('.user-order-next-billing-date');
                        if(paymentCycle == 'DAY') {
                            date.add(1, 'days').startOf('day').toDate();
                            let dateLabel = date.format('DD-MMM-YYYY');
                            nextBillingDateEl.text(dateLabel);
                        } else if(paymentCycle == 'WEEK') {
                            date.add(7, 'days').startOf('day').toDate();
                            let dateLabel = date.format('DD-MMM-YYYY');
                            nextBillingDateEl.text(dateLabel);
                        } else if(paymentCycle == 'MONTH') {
                            date.add(1, 'M').toDate();
                            let dateLabel = date.format('DD-MMM-YYYY');
                            nextBillingDateEl.text(dateLabel);
                        } else if(paymentCycle == 'MONTH-TWO' || paymentCycle == 'TWO_MONTHS') {
                            date.add(2, 'M').toDate();
                            let dateLabel = date.format('DD-MMM-YYYY');
                            nextBillingDateEl.text(dateLabel);
                        } else if(paymentCycle == 'QUARTER') {
                            date.add(3, 'M').toDate();
                            let dateLabel = date.format('DD-MMM-YYYY');
                            nextBillingDateEl.text(dateLabel);
                        } else if(paymentCycle == 'SEMESTER') {
                            date.add(6, 'M').toDate();
                            let dateLabel = date.format('DD-MMM-YYYY');
                            nextBillingDateEl.text(dateLabel);
                        } else if(paymentCycle == 'YEAR') {
                            date.add(1, 'Y').toDate();
                            let dateLabel = date.format('DD-MMM-YYYY');
                            nextBillingDateEl.text(dateLabel);
                        }
                    } else {
                        if(paymentCycle == 'DAY') {
                            nextBillingDateEl.datepicker('setDate', date.add(1, 'days').startOf('day').toDate());
                        } else if(paymentCycle == 'WEEK') {
                            nextBillingDateEl.datepicker('setDate', date.add(7, 'days').startOf('day').toDate());
                        } else if(paymentCycle == 'MONTH') {
                            nextBillingDateEl.datepicker('setDate', date.add(1, 'M').toDate());
                        } else if(paymentCycle == 'MONTH-TWO' || paymentCycle == 'TWO_MONTHS') {
                            nextBillingDateEl.datepicker('setDate', date.add(2, 'M').toDate());
                        } else if(paymentCycle == 'QUARTER') {
                            nextBillingDateEl.datepicker('setDate', date.add(3, 'M').toDate());
                        } else if(paymentCycle == 'SEMESTER') {
                            nextBillingDateEl.datepicker('setDate', date.add(6, 'M').toDate());
                        } else if(paymentCycle == 'YEAR') {
                            nextBillingDateEl.datepicker('setDate', date.add(1, 'Y').toDate());
                        }
                    }

                    if(recurringStatusEl.val() != 'canceled') {
                        recurringStatusEl.val('<?php echo Store_Model_RecurringPayments::ACTIVE_RECURRING_PAYMENT; ?>');
                    }

                    showMessage(response.responseText);
                }
            }, 'json');

        });

        $('.recurring-shipping-update').on('click', function () {
            var cartId = $(this).closest('tr').data('id'),
                secureToken = $('.secureToken').val();
            $.post('<?php echo $this->websiteUrl;?>' + 'plugin/shopping/run/updateRecurringData/', {
                'firstName': $(this).closest('tr').find('.recurring-shipping-firstname').val(),
                'lastName': $(this).closest('tr').find('.recurring-shipping-lastname').val(),
                'address1': $(this).closest('tr').find('.recurring-shipping-address1').val(),
                'address2': $(this).closest('tr').find('.recurring-shipping-address2').val(),
                'zip': $(this).closest('tr').find('.recurring-shipping-zip').val(),
                'changeType': 'shipping',
                'cartId': cartId,
                'secureToken': secureToken
            }, function (response) {
                if (response.error) {
                    self.val(previousRecurringValue);
                    showMessage(response.responseText, true);
                } else {
                    showMessage(response.responseText);
                }
            }, 'json');
        });

        $('.user-order-next-billing-date-change').datepicker({
            dateFormat: 'd-M-yy',
            changeMonth: true,
            changeYear: true,
            yearRange: "c-5:c+5",
            minDate: 0,
            onSelect: function () {
                var nextBillingDate = $(this).val(),
                    cartId = $(this).closest('tr').data('id'),
                    secureToken = $('.secureToken').val();
                $.post('<?php echo $this->websiteUrl;?>' + 'plugin/shopping/run/updateSubscription/', {
                    'nextBillingDate': nextBillingDate,
                    'cartId': cartId,
                    'secureToken': secureToken
                }, function (response) {
                    if (response.error) {
                        showMessage(response.responseText, true);
                    } else {
                        showMessage(response.responseText);
                    }
                }, 'json');
            }
        });
    });
</script>
