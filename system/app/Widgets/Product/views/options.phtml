<div id="product-<?php echo $this->product->getId();?>-options-listing" class="product-options-listing" data-productId="<?php echo  $this->product->getId();?>" >
<?php
$showWithTax = (bool) Models_Mapper_ShoppingConfig::getInstance()->getConfigParam('showPriceIncTax');
$originalPrice  = $this->product->getPrice();
$currentPrice   = is_null($this->product->getCurrentPrice()) ? $this->product->getPrice() : $this->product->getCurrentPrice();
if ($showWithTax){
	$originalPrice += round(( $this->taxRate * floatval($originalPrice)) / 100, 2);
	$currentPrice  += round(( $this->taxRate * floatval($currentPrice)) / 100, 2);
}
/**
 * @var $cur Zend_Currency
 */
$cur = $this->currency()->getCurrency();
$format = strtr($cur->toCurrency(0), array('0' => 'x', '.'=> '', ',' => '', $cur->getSymbol() => '%s' ));
$format = preg_replace('/x+/', '%v', $format);
$pricesData     = array(
	'format'    => array(
		'decimal' => preg_replace('/.*0([\.,])0.*/u', '$1', $cur->toCurrency(0) ),
		'thousand' => preg_replace('/.*1(.?)000.*/u', '$1', $cur->toCurrency(1000)),
		'symbol' => $cur->getSymbol(),
		'format' => $format
	),
	'original'  => array(
		'price' => $originalPrice
	),
	'current'   => array(
		'price' => $currentPrice
	)
);
unset($cur, $format);
?>
<?php foreach ($this->product->getDefaultOptions() as $option): ?>
    <?php $uniqName = 'product-'.$this->product->getId().'-option-'.$option['id']; ?>
    <?php
    $defaultId = null;
    $options = array();
    if ($option['type'] === Models_Model_Option::TYPE_DROPDOWN || $option['type'] === Models_Model_Option::TYPE_RADIO) {
	    $template = $option['type'] === Models_Model_Option::TYPE_RADIO ? ' <span>(%s%s)</span>' : ' (%s%s)';
        if (!empty($option['selection'])) {
            foreach ($option['selection'] as $item) {
                $options[$item['id']] = Models_Model_Option::TYPE_RADIO ? $this->escape($item['title']) : $item['title'];
                if (floatval($item['priceValue']) != 0){
                    if ($item['priceType'] === 'unit'){
                        $price = floatval($item['priceValue']);
                        if (!empty($this->discountRules)) {
                            foreach ($this->discountRules as $discountRule) {
                                $price = Tools_DiscountTools::applyDiscountData($price, $discountRule, false, true);
                            }
                        }
                        if ($this->taxRate && (bool)$showWithTax){
                            $price = $price + round(( $this->taxRate * $price) / 100, 2);
                        }
                        $item['priceValue'] = $this->currency($price);
                        $pricesData['original'][$item['id']] = $item['priceSign'] . $price;
                        $pricesData['current'][$item['id']] = $item['priceSign'] .  $price;
                        unset($price);
                    } else {
                        $modifiedOptionPrice = round($originalPrice / 100 * $item['priceValue'], 2);
                        if (!empty($this->discountRules)) {
                            foreach ($this->discountRules as $discountRule) {
                                $modifiedOptionPrice = round(Tools_DiscountTools::applyDiscountData($modifiedOptionPrice, $discountRule, false, true), 2);
                            }
                        }
                        $pricesData['original'][$item['id']] = $item['priceSign'] . round($originalPrice / 100 * $item['priceValue'], 2);
                        $pricesData['current'][$item['id']] = $item['priceSign'] . $modifiedOptionPrice;
                        $item['priceValue'] = number_format($item['priceValue'], 2).'%';
                    }
                    $options[$item['id']] .= sprintf($template, $item['priceSign'], $item['priceValue']);
                }
                if ($item['isDefault']) $defaultId = $item['id'];
            }
        }
    }
    ?>

    <div class="product-option option-<?php echo strtolower(preg_replace('/[^\w\d]/i', '', $option['title']));?>" id="product-<?php echo $this->product->getId();?>_option-<?php echo $option['id'];?>" data-type="<?php echo $option['type'];?>">
        <label><?php echo $option['title'];?></label>
        <?php if ($option['type'] === Models_Model_Option::TYPE_DROPDOWN): ?>
        <?php echo  $this->formSelect($uniqName, $defaultId, null, $options); ?>
        <?php elseif ($option['type'] === Models_Model_Option::TYPE_RADIO): ?>
        <div>
        <?php echo  $this->formRadio($uniqName, $defaultId, array('escape'=>false), $options, ''); ?>
        </div>
        <?php elseif ($option['type'] === Models_Model_Option::TYPE_TEXT): ?>
        <input type="text" name="<?php echo  $uniqName;?>" />
        <?php elseif ($option['type'] === Models_Model_Option::TYPE_DATE): ?>
		    <div>
				<input type="date" class="option-datepicker" name="<?php echo  $uniqName;?>" />
		        <span class="ticon-calendar icon16" onclick="$('input[name=<?php echo  $uniqName;?>]').focus();"></span>
		    </div>
	    <?php endif; ?>
    </div>
<?php endforeach; ?>
</div>

<?php if (!empty($pricesData)):?>
<script type="text/javascript">
	$(function(){
		$('.product-options-listing[data-productId="<?php echo  $this->product->getId();?>"]').data('prices', <?php echo json_encode($pricesData);?>);
	})
</script>
<?php endif; ?>